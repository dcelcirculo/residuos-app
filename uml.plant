@startuml
skinparam backgroundColor #FFFFFF
skinparam classAttributeIconSize 0
skinparam class {
  BackgroundColor #F7FAFC
  BorderColor #2F855A
  ArrowColor #2B6CB0
  FontColor #1A202C
}

hide stereotype circle
hide methods

package "Dominio" {
  class User {
    - id : int
    - name : string
    - email : string
    - phone : string
    - password : string
    - role : string
    + isAdmin() : bool
    + isEmpresaRecolectora() : bool
    + isUser() : bool
    + solicitudes() : List<Solicitud>
    + recolecciones() : List<Recoleccion>
    + empresaRecolectora() : EmpresaRecolectora
  }

  class Solicitud {
    - id : int
    - user_id : int
    - tipo_residuo : string
    - fecha_programada : date
    - frecuencia : string
    - recolecciones_por_semana : tinyint
    - turno_ruta : smallint
    - recordatorio_prev_enviado_at : datetime
    - recordatorio_dia_enviado_at : datetime
    - estado : string
    + user() : User
    + recolecciones() : List<Recoleccion>
  }

  class Recoleccion {
    - id : int
    - solicitud_id : int
    - user_id : int
    - fecha_real : datetime
    - kilos : float
    - cumple_separacion : bool
    - puntos : int
    + solicitud() : Solicitud
    + recolector() : User
  }

  class Setting {
    - id : int
    - key : string
    - value : text
  }
}

package "HTTP Controllers" {
  class SolicitudController {
    + index()
    + create()
    + store()
    + export()
    + update()
    + destroy()
  }

  class RecoleccionController {
    + index()
    + store()
    + update()
    + export()
  }

  class AdminController {
    + dashboard()
    + users()
    + manageUsers()
    + storeUser()
    + searchUser()
    + updateUser()
    + deleteUser()
  }
}

package "Console" {
  class SendSolicitudReminders {
    + handle()
    + processWindow()
    + buildMessage()
  }
}

package Services {
  class WhatsAppService {
    + send(to, message)
  }

  class PointsCalculator {
    + calculate(kilos)
    + updateFormula(formula)
    + getFormula()
  }
}

package Middleware {
  class AdminMiddleware {
    + handle(request, next)
  }
}

User "1" -- "*" Solicitud : crea
Solicitud "1" -- "*" Recoleccion : genera
User "1" -- "*" Recoleccion : recolecta

SolicitudController --> Solicitud : gestiona
SolicitudController ..> User : auth()
RecoleccionController --> Recoleccion : gestiona
RecoleccionController ..> Solicitud : actualiza estado
AdminController --> User : administra
AdminController ..> Solicitud : métricas
AdminController ..> Recoleccion : métricas
AdminMiddleware ..> AdminController : protege
AdminMiddleware ..> User : verifica rol
AdminController ..> User : crea cuentas
PointsCalculator ..> Setting : persiste fórmula
RecoleccionController ..> PointsCalculator : calcula puntos
SendSolicitudReminders ..> Solicitud : consulta recordatorios
SendSolicitudReminders ..> WhatsAppService : envía notificaciones
WhatsAppService ..> User : requiere phone

note right of Solicitud
  estado ∈ {pendiente, en_proceso,
            completada, cancelada}
  frecuencia ∈ {programada, demanda}
  recolecciones_por_semana ∈ {1, 2}
  turno_ruta ∈ [1, 500]
end note

note right of User
  role ∈ {user, admin, empresa}
  phone formato E.164 (opcional)
end note

note right of Recoleccion
  kilos registrado por la empresa recolectora al retirar
  material reciclable
  cumple_separacion controla si se asignan puntos
end note

@enduml
